<meta charset="utf-8" lang="en" /><style class="fallback">body{visibility:hidden;}</style>

**Installing Java 17**

# Installing Java 17 Open JDK and JavaFX

## Install Java 17 Open JDK
* Download Windows/x64 `.zip` build from [here](https://download.oracle.com/java/17/latest/jdk-17_windows-x64_bin.zip)
* Create a folder at `C:\Java`
* Copy the `jdk-17.0.1`[^jdkpath] folder from the `.zip` file to `C:\Java\`

## Install JavaFX 17
* Download x64 **JavaFX Windows SDK** from [here](https://gluonhq.com/products/javafx/)
* Copy the `javafx-sdk-17.0.1`[^javafxpath] folder from the `.zip` file to `C:\Java\`

# Configure Environment Variables (Windows)
In order to use Java from the command line, it is useful to set the following environment variables.

## Set `JAVA_HOME` environment variable
* Press the Windows key and type **advanced system settings**
* Select **View advanced systems settings**
* Click the **Environment Variables** button under the **Advanced** tab
* Click the lower **New...** button under the list of **System variables**
* Set `JAVA_HOME` as the **Variable name** and `C:\Java\jdk-17.0.1` as the **Variable value** and click **OK**
* Click **OK** and then **OK** again

## Set `PATH_TO_FX` environment variable
* Select **View advanced systems settings**
* Click the **Environment Variables** button under the **Advanced** tab
* Click the lower **New...** button under the list of **System variables**
* Set `PATH_TO_FX` as the **Variable name** and `C:\Java\javafx-sdk-17.0.1\lib` as the **Variable value** and click **OK**
* Click **OK** and then **OK** again

# Configure IntelliJ

## Set the **Project SDK** to `C:\Java\jdk-17.0.1`
* Go to **File** -> **New Projects Setup** -> **Structure**
* Select **Project** under **Project Settings** on the left side
* Under **Project SDK**: Select **17** (if available); otherwise:
   + Click **Add SDK**
   + Select JDK and browse to `C:\Java\jdk-17.0.1`
* Under **Project language level** select **17 - Sealed types, always-strict floating-point semantics**
* Click **OK**

## Add JavaFX to **Global Library**
* Go to **File** -> **New Projects Setup** -> **Structure**
* Select **Global Libraries** under **Platform Settings** on the left side
* Click the **+** (plus symbol) in the upper left of the second column
* Select **Java** from the menu
* Browse to `C:\Java\javafx-sdk-17.0.1\lib`
* Click **OK** twice

## Set Run Configuration Template for **Application**
* Go to **File** -> **New Projects Setup** -> **Run Configuration Templates...**
* Select **Application**
* Click **Modify options** (or type <kbd>Alt</kbd>+<kbd>M</kbd>) and ensure **Add VM options** is checked
* Paste the following in **VM options**: 
```
--module-path C:\Java\javafx-sdk-17.0.1\lib --add-modules=javafx.controls,javafx.fxml
```
* Click **OK**

# New IntelliJ Project
All of the steps above must be implemented once, but you'll need to do the following for each new IntelliJ project.

* Create a **Java** (__not__ JavaFX) project, if you create a JavaFX project, you will need to set the run configuration (as described above).

## Add the JavaFX 17 SDK library
* Go to **File** -> **Project Structure...** (<kbd>CTRL</kbd>+<kbd>ALT</kbd>+<kbd>SHIFT</kbd>+<kbd>S</kbd>)
* Select **Modules**
* Open the **Dependencies** tab and click <kbd>+</kbd>
* Select **Library...**
* Select **lib**
* Click **Add Selected** and then **OK**

[^jdkpath]: If the version of the JDK is different, you will need to use the new version number in the rest of the instructions. E.g., if the version of JDK is 17.0.2, you should replace `jdk-17.0.1` with `jdk-17.0.2`.

[^javafxpath]: You may need to update the version number on the javafx-sdk in a similar way to a JDK version change.

<!-- Markdeep: --><script src="../markdeep.js?taylorial"></script>
