<meta charset="utf-8" lang="en" /><style class="fallback">body{visibility:hidden;}</style>

**Installing Java 17**

# Installing Java 17 Open JDK and JavaFX

## Install Java 17 Open JDK
* Download Windows/x64 `.msi` build from [here](https://www.oracle.com/java/technologies/downloads/#jdk17-windows)
* Open the `.msi` file to install JDK17

## Install JavaFX 18
* Apparently JavaFX 17 is no longer available for download.
* Download x64 **JavaFX 18 Windows SDK** from [here](https://gluonhq.com/products/javafx/) and unzip the file
* Copy the `javafx-sdk-18.0.2`[^javafxpath] folder from the `.zip` file to `C:\Program Files\Java\`

## Install Scene Builder 18
* Download Scene Builder Windows Installer from [here](https://glounhq.com/products/scene-builder/#download)
* Open the `.msi` file to install Scene Builder

# Configure IntelliJ

## Set the **Project SDK**
* Go to **File** -> **New Projects Setup** -> **Structure**
* Select **Project** under **Project Settings** on the left side
* Set **SDK** to **17** (if available); otherwise:
   + Click **Add SDK**
   + Select JDK and browse to `C:\Program Files\Java\jdk-17.0.4`[^jdkpath]
* Under **Project language level** select **SDK default (17 - Sealed types, always-strict floating-point semantics)**
* Click **OK**

## Add JavaFX to **Global Library**
* Go to **File** -> **New Projects Setup** -> **Structure**
* Select **Global Libraries** under **Platform Settings** on the left side
* Click the **+** (plus symbol) in the upper left of the second column
* Select **Java** from the menu
* Browse to `C:\Program Files\Java\javafx-sdk-18.0.2\lib` (adjust to match version)
* Click **OK** twice

## Set Run Configuration Template for **Application**
* Go to **File** -> **New Projects Setup** -> **Run Configuration Templates...**
* Select **Application**
* Click **Modify options** (or type <kbd>Alt</kbd>+<kbd>M</kbd>) and ensure **Add VM options** is checked
* Paste the following in **VM options**: 
```
--module-path "C:\Program Files\Java\javafx-sdk-18.0.2\lib" --add-modules=javafx.controls,javafx.fxml
```
Here too, ensure that the version number matches what you downloaded
* Click **OK**

# New IntelliJ Project
All of the steps above must be implemented once, but you'll need to do the following for each new IntelliJ project.

* Create a **Java** (__not__ JavaFX) project, if you create a JavaFX project, you will need to set the run configuration (as described above).

## Add the JavaFX SDK library
* Go to **File** -> **Project Structure...** (<kbd>CTRL</kbd>+<kbd>ALT</kbd>+<kbd>SHIFT</kbd>+<kbd>S</kbd>)
* Select **Modules**
* Open the **Dependencies** tab and click <kbd>+</kbd>
* Select **Library...**
* Select **lib**
* Click **Add Selected** and then **OK**

[^jdkpath]: If the version of the JDK is different, you will need to use the new version number in the rest of the instructions. E.g., if the version of JDK is 17.0.5, you should replace `jdk-17.0.4` with `jdk-17.0.5`.

[^javafxpath]: You may need to update the version number on the javafx-sdk in a similar way to a JDK version change.

<!-- Markdeep: --><script src="../markdeep.js?taylorial"></script>
